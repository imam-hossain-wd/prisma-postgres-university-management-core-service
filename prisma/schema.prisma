// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AcademicSemester {
  id         String    @id @default(uuid())
  year       String
  title      String
  code       String
  startMonth String    @map("start_month")
  endMonth   String    @map("end_month")
  createAt   DateTime  @default(now()) @map("create_at")
  updatedAt  DateTime  @default(now()) @updatedAt @map("updated_at")
  student    Student[]

  @@map("academic_semesters")
}

model AcademicFaculty {
  id                 String               @id @default(uuid())
  title              String
  createAt           DateTime             @default(now()) @map("create_at")
  updatedAt          DateTime             @default(now()) @updatedAt @map("updated_at")
  students           Student[]
  faculties          Faculty[]
  AcademicDepartment AcademicDepartment[]

  @@map("academic_faculty")
}

model AcademicDepartment {
  id                String          @id @default(uuid())
  title             String
  createAt          DateTime        @default(now()) @map("create_at")
  updatedAt         DateTime        @default(now()) @updatedAt @map("updated_at")
  academicFaculty   AcademicFaculty @relation(fields: [academicFacultyId], references: [id])
  academicFacultyId String          @map("academic_faculty_id")
  students          Student[]
  faculties         Faculty[]

  @@map("academic_department")
}

model Student {
  id                   String             @id @default(uuid())
  studentId            String             @map("student_id")
  firstName            String             @map("first_name")
  lastName             String             @map("last_name")
  middleName           String             @map("middle_name")
  profileImage         String             @map("profile_image")
  email                String
  contactNo            String             @map("contact_no")
  gender               String
  bloodGroup           String             @map("blood_group")
  createAt             DateTime           @default(now()) @map("create_at")
  updatedAt            DateTime           @default(now()) @updatedAt @map("updated_at")
  academicSemester     AcademicSemester   @relation(fields: [academicSemesterId], references: [id])
  academicSemesterId   String             @map("academic_semester_id")
  academicFaculty      AcademicFaculty    @relation(fields: [academicFacultyId], references: [id])
  academicFacultyId    String             @map("academic_faculty_id")
  academicDepartment   AcademicDepartment @relation(fields: [academicDepartmentId], references: [id])
  academicDepartmentId String             @map("academic_department_id")
}

model Faculty {
  id                   String             @id @default(uuid())
  facultyId            String             @map("faculty_id")
  firstName            String             @map("first_name")
  lastName             String             @map("last_name")
  middleName           String             @map("middle_name")
  profileImage         String             @map("profile_image")
  email                String
  contactNo            String             @map("contact_no")
  gender               String
  bloodGroup           String             @map("blood_group")
  designation          String
  createAt             DateTime           @default(now()) @map("create_at")
  updatedAt            DateTime           @default(now()) @updatedAt @map("updated_at")
  academicDepartment   AcademicDepartment @relation(fields: [academicDepartmentId], references: [id])
  academicDepartmentId String             @map("academic_department_id")
  academicFaculty      AcademicFaculty    @relation(fields: [academicFacultyId], references: [id])
  academicFacultyId    String             @map("academic_faculty_id")
}
